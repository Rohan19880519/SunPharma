<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Customer Wholesalers</title>
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        /* Global styles for the body */
        body {
            font-family: 'Century Gothic', sans-serif; /* Sets the font family */
            background-color: #f0f4f8; /* Light background color */
            margin: 0;
            padding: 0;
        }

        /* Adjust Logo */
        .navbar .logo img {
            height: 50px; /* Sets the logo height */
            width: auto; /* Keeps the aspect ratio */
            margin-right: 10px; /* Space to the right of the logo */
        }

        /* Navbar styles */
        .navbar {
            background-color: #7b8b9c; /* Navbar background color */
            position: fixed; /* Fixes the navbar at the top */
            top: 0; /* Positions it at the very top */
            width: 98%; /* Full width */
            z-index: 1000; /* Stacks it above other elements */
            display: flex; /* Uses flexbox for layout */
            justify-content: space-between; /* Spaces items evenly */
            align-items: center; /* Vertically centers items */
            padding: 10px 20px; /* Padding inside the navbar */
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Adds shadow */
        }

        .navbar ul {
            list-style-type: none; /* Removes bullet points */
            margin: 0;
            padding: 0;
            display: flex; /* Displays list items horizontally */
            gap: 5px; /* Space between menu items */
        }

        .navbar ul li {
            position: relative; /* For positioning dropdowns */
        }

        .navbar ul li a {
            display: block; /* Makes the link fill the list item */
            padding: 8px 12px; /* Padding around the link */
            color: #ecf0f1; /* Link text color */
            text-decoration: none; /* Removes underline */
            font-weight: normal; /* Normal font weight (not bold) */
            transition: background-color 0.3s ease; /* Smooth hover effect */
        }

        .navbar ul li a:hover {
            background-color: #e27618; /* Background on hover */
            border-radius: 5px; /* Rounds the corners */
        }

        .navbar ul li a.active {
            background-color: #7b8b9c; /* Active link background */
            color: #ffffff; /* Active link text color */
        }

        /* Dropdown menu styles */
        .dropdown {
            display: none; /* Hidden by default */
            position: absolute; /* Positioned relative to parent */
            background-color: #7b8b9c; /* Background color */
            min-width: 160px; /* Minimum width */
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1); /* Adds shadow */
            z-index: 1; /* Stacks above other elements */
            top: 100%; /* Positions below the parent */
            left: 0; /* Aligns to the left */
            opacity: 0; /* Transparent */
            transition: opacity 0.3s ease; /* Fade-in effect */
        }

        /* Shows the dropdown on hover or focus */
        .navbar ul li:hover .dropdown,
        .navbar ul li:focus-within .dropdown {
            display: block; /* Makes it visible */
            opacity: 1; /* Fully opaque */
        }

        .dropdown a {
            padding: 12px 16px; /* Padding inside dropdown links */
            text-decoration: none; /* Removes underline */
            display: block; /* Fills the container */
            color: #ffffff; /* Text color */
            text-align: left; /* Left-aligns text */
        }

        .dropdown a:hover {
            background-color: #e27618; /* Background on hover */
        }

        /* Main content styles */
        .content {
            padding-top: 150px;
            color: #7b8b9c;
            padding: 30px;
            text-align: center;
        }

        h1 {
            color: #7b8b9c;
            margin-bottom: 20px;
            font-size: 2.5rem;
        }

        /* Table styles */
        table {
            width: 100%;
            border-collapse: collapse;
            background-color: #ffffff;
            margin-bottom: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        th, td {
            border: 1px solid #dfe6e9;
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #7b8b9c;
            color: #ffffff;
        }

        td {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        /* Slider switch styles */
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: 0.4s;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: 0.4s;
        }

        input:checked + .slider {
            background-color: #4caf50;
        }

        input:checked + .slider:before {
            transform: translateX(26px);
        }

        .slider.round {
            border-radius: 34px;
        }

        .slider.round:before {
            border-radius: 50%;
        }

        .edit-btn, .delete-btn {
            cursor: pointer;
            padding: 5px 10px;
            color: white;
            background-color: #7b8b9c;
            border: none;
            border-radius: 5px;
        }

        .edit-btn:hover, .delete-btn:hover {
            background-color: #e27618;
        }

        .message {
            display: none;
            padding: 10px;
            background-color: #4caf50;
            color: white;
            border-radius: 5px;
        }

        .error-message {
            display: none;
            padding: 10px;
            background-color: #f44336;
            color: white;
            border-radius: 5px;
        }

        /* Upload form styles */
        .upload-form {
            margin-bottom: 20px;
            text-align: center;
        }

        .upload-form input[type="file"], .upload-form button {
            padding: 10px;
            background-color: #7ed957;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .upload-form button {
            margin-left: 10px;
        }

        .upload-form input[type="file"] {
            cursor: pointer;
        }

        /* Modal styles */
		.modal {
			display: none; /* Hidden by default, it will be shown when triggered */
			position: fixed; /* Fixed position for consistent positioning */
			z-index: 1001; /* Ensures it appears on top */
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
			justify-content: center; /* Horizontally centers the modal */
			align-items: center; /* Vertically centers the modal */
		}

		.modal-content {
			background-color: #fff;
			padding: 20px;
			width: 40%; /* Width of the modal */
			max-width: 500px; /* Max width to prevent stretching */
			border-radius: 10px;
			text-align: left;
			box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1); /* Adds shadow for depth */
			position: relative; /* Positioned relative to its container */
		}

        .close-btn {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close-btn:hover {
            color: #000;
            cursor: pointer;
        }
		
		    /* Orange button style */
    .add-btn {
        background-color: #e27618; /* Orange color */
        color: white;
        border: none;
        padding: 10px 20px;
        cursor: pointer;
        border-radius: 5px;
        font-size: 16px;
        transition: background-color 0.3s ease;
    }

    /* Button hover effect */
    .add-btn:hover {
        background-color: #d16510; /* Darker orange on hover */
    }
</style>
    </style>
</head>
<body>

<!-- Navbar -->
<nav class="navbar">
    <a href="/home" class="logo">
        <img src="/assets/logo.png" alt="Company Logo">
    </a>
    <ul>
        <li><a href="/home">Home</a></li>
        <li>
            <a href="/customers">Customers</a>
            <ul class="dropdown">
                <li><a href="/customers/groups">Groups</a></li>
                <li><a href="/customers/wholesalers">Wholesalers</a></li>
            </ul>
        </li>
        <li><a href="/sales">Sales</a>
            <ul class="dropdown">
                <li><a href="/sales/products">Products</a></li> <!-- New Page Link -->
            </ul>
        </li>
        <li>
            <a href="/financials">Financials</a>
            <ul class="dropdown">
                <li><a href="/financials/tiers">Tiers</a></li>
                <li><a href="/financials/adhoc">Ad-Hoc</a></li>
                <li><a href="/financials/targets">Targets</a></li>
                <li><a href="/financials/tax-invoices">Tax Invoices</a></li>
                <li><a href="/financials/company-details">Company Details</a></li>
            </ul>
        </li>
        <li>
            <a href="/representatives">Representatives</a>
            <ul class="dropdown">
                <li><a href="/representatives/targets">Representative Targets</a></li>
                <li><a href="/representatives/request-funds">Request For Funds</a></li>
                <li><a href="/representatives/rsm">RSM's</a></li>
            </ul>
        </li>
        <li><a href="/logout">Logout</a></li>
    </ul>
</nav>



<!-- Success and Error Messages -->
<div id="message" class="message" style="display: none;">Action completed successfully!</div>
<div id="errorMessage" class="error-message" style="display: none;">An error occurred.</div>

<!-- Main Content -->
<div class="content">
<div class="content">
    <h1>Customer Tiers</h1>

    <!-- Upload Form -->
    <div class="upload-form">
        <form id="uploadForm" enctype="multipart/form-data">
            <input type="file" name="tierFile" accept=".xlsx" required>
            <button type="submit">Upload Tier Data</button>
        </form>
    </div>

    <!-- Success and Error Messages -->
    <div id="message" class="message" style="display: none;">Action completed successfully!</div>
    <div id="errorMessage" class="error-message" style="display: none;">An error occurred.</div>

    <!-- Tiers Table -->
    <table id="tierTable">
        <thead>
            <tr>
                <th>Tier Name</th>
                <th>Minimum Purchase Value</th>
                <th>Discount</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <% if (tiers && tiers.length > 0) { %>
                <% tiers.forEach(function(tier) { %>
                    <tr>
                        <td><%= tier.name %></td>
                        <td><%= tier.minimumPurchase %></td>
                        <td><%= tier.discountPercentage %></td>
                        <td>
                            <button class="edit-btn" onclick="openModal('<%= tier.name %>', '<%= tier.minimumPurchase %>', '<%= tier.discountPercentage %>', '<%= tier.id %>')">Edit</button>
                            <button class="delete-btn" onclick="deleteTier('<%= tier.id %>')">Delete</button>
                        </td>
                    </tr>
                <% }) %>
            <% } else { %>
                <tr>
                    <td colspan="4">No tiers available</td>
                </tr>
            <% } %>
        </tbody>
    </table>
</div>

<!-- Modal for editing Tier -->
<div class="modal" id="editTierModal">
    <div class="modal-content">
        <span class="close-btn" onclick="closeModal()">&times;</span>
        <h2>Edit Tier</h2>
        <form id="editTierForm">
            <input type="hidden" name="tierId" id="tierId">
            <div class="form-group">
                <label for="tierNameNew">Tier Name:</label>
                <input type="text" name="tierNameNew" id="tierNameNew" required>
            </div>
            <div class="form-group">
                <label for="tierMinPurchaseNew">Minimum Purchase Value:</label>
                <input type="number" name="tierMinPurchaseNew" id="tierMinPurchaseNew" required>
            </div>
            <div class="form-group">
                <label for="tierDiscountNew">Discount Percentage:</label>
                <input type="number" name="tierDiscountNew" id="tierDiscountNew" step="0.01" required>
            </div>
            <button type="submit">Save Changes</button>
        </form>
    </div>
</div>

<!-- Add New Tier Modal -->
<div class="modal" id="addTierModal">
    <div class="modal-content">
        <span class="close-btn" onclick="closeAddModal()">&times;</span>
        <h2>Add New Tier</h2>
        <form id="addTierForm">
            <div class="form-group">
                <label for="tierNameNew">Tier Name:</label>
                <input type="text" name="tierNameNew" id="tierNameNewAdd" required>
            </div>
            <div class="form-group">
                <label for="tierMinPurchaseNew">Minimum Purchase Value:</label>
                <input type="number" name="tierMinPurchaseNew" id="tierMinPurchaseNewAdd" required>
            </div>
            <div class="form-group">
                <label for="tierDiscountNew">Discount Percentage:</label>
                <input type="number" name="tierDiscountNew" id="tierDiscountNewAdd" step="0.01" required>
            </div>
            <button type="submit">Add Tier</button>
        </form>
    </div>
</div>

<!-- Button to Open Add Tier Modal -->
<button class="add-btn" onclick="openAddModal()">Add New Tier</button>


<script>
    // Function to open the add modal
    function openAddModal() {
        document.getElementById('addTierModal').style.display = 'flex'; // Ensure 'flex' is used for centering
    }

    // Function to close the add modal
    function closeAddModal() {
        document.getElementById('addTierModal').style.display = 'none';
    }

    // Handle Add Form submission
    document.getElementById('addTierForm').addEventListener('submit', async function(event) {
        event.preventDefault();

        const tierNameNew = document.getElementById('tierNameNewAdd').value;
        const tierMinPurchaseNew = document.getElementById('tierMinPurchaseNewAdd').value;
        const tierDiscountNew = document.getElementById('tierDiscountNewAdd').value;

        try {
            const response = await fetch('/financials/tiers/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    name: tierNameNew,
                    minimumPurchase: tierMinPurchaseNew,
                    discountPercentage: tierDiscountNew
                })
            });

            const result = await response.json();
            if (result.success) {
                document.getElementById('message').textContent = 'Tier added successfully!';
                document.getElementById('message').style.display = 'block';
                setTimeout(() => {
                    document.getElementById('message').style.display = 'none';
                    closeAddModal();
                    location.reload(); // Reload the page to reflect changes
                }, 3000);
            } else {
                document.getElementById('errorMessage').textContent = result.message;
                document.getElementById('errorMessage').style.display = 'block';
                setTimeout(() => document.getElementById('errorMessage').style.display = 'none', 3000);
            }
        } catch (error) {
            console.error('Error adding tier:', error);
            document.getElementById('errorMessage').textContent = 'Failed to add tier';
            document.getElementById('errorMessage').style.display = 'block';
            setTimeout(() => document.getElementById('errorMessage').style.display = 'none', 3000);
        }
    });
</script>



<script>
// Function to open the edit modal for tiers
function openModal(tierName, tierMinPurchase, tierDiscount, tierId) {
    document.getElementById('tierId').value = tierId;
    document.getElementById('tierNameNew').value = tierName;
    document.getElementById('tierMinPurchaseNew').value = tierMinPurchase;
    document.getElementById('tierDiscountNew').value = tierDiscount;
    document.getElementById('editTierModal').style.display = 'flex'; // Show modal when triggered
}

// Function to close the modal
function closeModal() {
    document.getElementById('editTierModal').style.display = 'none'; // Hide modal when closed
}


    // Handle Edit Form submission
    document.getElementById('editTierForm').addEventListener('submit', async function(event) {
        event.preventDefault();
        
        const tierId = document.getElementById('tierId').value;
        const tierNameNew = document.getElementById('tierNameNew').value;
        const tierMinPurchaseNew = document.getElementById('tierMinPurchaseNew').value;
        const tierDiscountNew = document.getElementById('tierDiscountNew').value;

        try {
            const response = await fetch(`/financials/tiers/edit/${tierId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    name: tierNameNew,
                    minimumPurchase: tierMinPurchaseNew,
                    discountPercentage: tierDiscountNew
                })
            });

            const result = await response.json();
            if (result.success) {
                document.getElementById('message').textContent = 'Tier updated successfully!';
                document.getElementById('message').style.display = 'block';
                setTimeout(() => {
                    document.getElementById('message').style.display = 'none';
                    closeModal();
                    location.reload();
                }, 3000);
            } else {
                document.getElementById('errorMessage').textContent = result.message;
                document.getElementById('errorMessage').style.display = 'block';
                setTimeout(() => document.getElementById('errorMessage').style.display = 'none', 3000);
            }
        } catch (error) {
            console.error('Error updating tier:', error);
            document.getElementById('errorMessage').textContent = 'Failed to update tier';
            document.getElementById('errorMessage').style.display = 'block';
            setTimeout(() => document.getElementById('errorMessage').style.display = 'none', 3000);
        }
    });

    // Function to delete a tier
    async function deleteTier(tierId) {
        if (confirm('Are you sure you want to delete this tier?')) {
            try {
                const response = await fetch(`/financials/tiers/delete/${tierId}`, {
                    method: 'POST'
                });

                if (response.ok) {
                    document.getElementById('message').textContent = 'Tier deleted successfully!';
                    document.getElementById('message').style.display = 'block';
                    setTimeout(() => {
                        document.getElementById('message').style.display = 'none';
                        location.reload();
                    }, 3000);
                } else {
                    const result = await response.json();
                    document.getElementById('errorMessage').textContent = result.message || 'Failed to delete tier';
                    document.getElementById('errorMessage').style.display = 'block';
                    setTimeout(() => document.getElementById('errorMessage').style.display = 'none', 3000);
                }
            } catch (error) {
                console.error('Error deleting tier:', error);
                document.getElementById('errorMessage').textContent = 'Failed to delete tier';
                document.getElementById('errorMessage').style.display = 'block';
                setTimeout(() => document.getElementById('errorMessage').style.display = 'none', 3000);
            }
        }
    }
</script>
